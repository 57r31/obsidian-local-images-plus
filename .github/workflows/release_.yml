name: Build obsidian plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: git config --global url."git@github.com:".insteadOf https://github.com/
      - run: git config --global url."git://".insteadOf https://
      - run: npm ci
      - run: npm run build --if-present
      - run: zip -r obsidian_local_images_plus_latest.zip ./obsidian_local_images_plus_latest
      - run: ls ./obsidian_local_images_plus_latest
      - run:  echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
      - run: ls

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
                  asset_path: ./obsidian_local_images_plus_latest.zip
                  asset_name: obsidian_local_images_plus_latest-${{ steps.build.outputs.tag_name }}.zip
          asset_content_type: application/zip
 


